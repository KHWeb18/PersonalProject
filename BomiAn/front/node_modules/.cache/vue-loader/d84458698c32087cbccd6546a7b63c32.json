{"remainingRequest":"/Users/anbomi/first_project/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anbomi/first_project/front/src/views/GoToVote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anbomi/first_project/front/src/views/GoToVote.vue","mtime":1632499225624},{"path":"/Users/anbomi/first_project/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anbomi/first_project/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anbomi/first_project/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anbomi/first_project/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWb3RlQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvVm90ZUNvbXBvbmVudC52dWUnCmltcG9ydCBDb21tZW50Q29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvQ29tbWVudENvbXBvbmVudC52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWb3RlQ29tcG9uZW50LAogICAgQ29tbWVudENvbXBvbmVudCwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBib2FyZDoge30sCiAgICAgIGNvbW1lbnRzOiBbXSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7ICAgIAogICAgdGhpcy5nZXRCb2FyZERldGFpbCgpOwogICAgdGhpcy5nZXRDb21tZW50c0xpc3QoKTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICAgIGlmKHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuZW1haWwgPT0gbnVsbCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnLycpCiAgICAgIGFsZXJ0KCfroZzqt7jsnbgg7ZuEIOydtOyaqe2VtOyjvOyEuOyalC4nKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Qm9hcmREZXRhaWwoKSB7CiAgICAgIGNvbnN0IGlkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgIHRoaXMuJGh0dHAuZ2V0KGAvYXBpL2dldEJvYXJkRGV0YWlsLyR7aWR9YCkKICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgIHRoaXMuYm9hcmQgPSByZXMuZGF0YSAKICAgICAgICAgIH0pCiAgICB9LAogICAgdm90ZU9wMShpZCkgewogICAgICBsZXQgdm90ZSA9IHsKICAgICAgICBiX25vOiBpZCwKICAgICAgICB1X25vOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLm5vCiAgICAgIH0KICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvYXBpL3ZvdGUvb3B0aW9uMScsIHt2b3RlOiB2b3RlfSkKICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgIGlmKHJlcy5kYXRhLnN1Y2Nlc3MgPT0gdHJ1ZSkgewogICAgICAgICAgICAgIGFsZXJ0KHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgICAgdGhpcy5nZXRCb2FyZERldGFpbCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGFsZXJ0KHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICB9LAogICAgdm90ZU9wMihpZCkgewogICAgICBsZXQgdm90ZSA9IHsKICAgICAgICBiX25vOiBpZCwKICAgICAgICB1X25vOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLm5vCiAgICAgIH0KICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvYXBpL3ZvdGUvb3B0aW9uMicsIHt2b3RlOiB2b3RlfSkKICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgIGlmKHJlcy5kYXRhLnN1Y2Nlc3MgPT0gdHJ1ZSkgewogICAgICAgICAgICAgIGFsZXJ0KHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgICAgdGhpcy5nZXRCb2FyZERldGFpbCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGFsZXJ0KHJlcy5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICB9LAogICAgZ2V0Q29tbWVudHNMaXN0KCkgewogICAgICAgY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgIHRoaXMuJGh0dHAuZ2V0KGAvYXBpL2dldENvbW1lbnRzTGlzdC8ke2lkfWApCiAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgdGhpcy5jb21tZW50cyA9IHJlcy5kYXRhCiAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICB9KQogICAgfSwKICAgIGRlbGV0ZUNvbW1lbnQoaWQpIHsKICAgICAgdGhpcy4kaHR0cC5wb3N0KGAvYXBpL2RlbGV0ZUNvbW1lbnQvJHtpZH1gKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICBhbGVydCgn7IKt7KCc6rCAIOyZhOujjOuQmOyXiOyKteuLiOuLpCEnKQogICAgICAgICAgICAgICAgICB0aGlzLmdldENvbW1lbnRzTGlzdCgpOwogICAgICAgICAgICAgICAgfSkKICAgIH0sCiAgICBpbnNlcnRDb21tZW50KGNvbW1lbnQpIHsKICAgICAgdGhpcy4kaHR0cC5wb3N0KCcvYXBpL2luc2VydENvbW1lbnQnLCB7Y29tbWVudDogY29tbWVudH0pCiAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICB0aGlzLmdldENvbW1lbnRzTGlzdCgpOwogICAgICAgICAgfSkKICAgIH0KICB9LAogIAp9Cg=="},{"version":3,"sources":["GoToVote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"GoToVote.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <vote-component v-bind:board=\"board\"\n                    v-on:voteOp1=\"voteOp1\"\n                    v-on:voteOp2=\"voteOp2\"\n    ></vote-component>\n    <comment-component v-bind:comments=\"comments\"\n                      v-on:deleteComment=\"deleteComment\"\n                      v-on:insertComment=\"insertComment\"\n\n    ></comment-component>\n  </div>\n</template>\n\n<script>\nimport VoteComponent from '../components/VoteComponent.vue'\nimport CommentComponent from '../components/CommentComponent.vue'\nexport default {\n  components: {\n    VoteComponent,\n    CommentComponent,\n  },\n  data() {\n    return {\n      board: {},\n      comments: [],\n    }\n  },\n  created() {    \n    this.getBoardDetail();\n    this.getCommentsList();\n  },\n  mounted() {\n      if(this.$store.state.user.email == null) {\n      this.$router.push('/')\n      alert('로그인 후 이용해주세요.')\n    }\n  },\n  methods: {\n    getBoardDetail() {\n      const id = this.$route.params.id\n      this.$http.get(`/api/getBoardDetail/${id}`)\n          .then(res => {\n            this.board = res.data \n          })\n    },\n    voteOp1(id) {\n      let vote = {\n        b_no: id,\n        u_no: this.$store.state.user.no\n      }\n      this.$http.post('/api/vote/option1', {vote: vote})\n          .then(res => {\n            if(res.data.success == true) {\n              alert(res.data.message)\n              this.getBoardDetail();\n            } else {\n              alert(res.data.message)\n            }\n          })\n    },\n    voteOp2(id) {\n      let vote = {\n        b_no: id,\n        u_no: this.$store.state.user.no\n      }\n      this.$http.post('/api/vote/option2', {vote: vote})\n          .then(res => {\n            if(res.data.success == true) {\n              alert(res.data.message)\n              this.getBoardDetail();\n            } else {\n              alert(res.data.message)\n            }\n          })\n    },\n    getCommentsList() {\n       const id = this.$route.params.id\n       this.$http.get(`/api/getCommentsList/${id}`)\n            .then(res => {\n              this.comments = res.data\n              console.log(res.data);\n            })\n    },\n    deleteComment(id) {\n      this.$http.post(`/api/deleteComment/${id}`)\n                .then(res => {\n                  console.log(res.data);\n                  alert('삭제가 완료되었습니다!')\n                  this.getCommentsList();\n                })\n    },\n    insertComment(comment) {\n      this.$http.post('/api/insertComment', {comment: comment})\n          .then(res => {\n            console.log(res);\n            this.getCommentsList();\n          })\n    }\n  },\n  \n}\n</script>"]}]}