{"remainingRequest":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/src/components/layout/AppBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/src/components/layout/AppBar.vue","mtime":1631532181308},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/proj_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwQmFyJywKCiAgZGF0YTogKCkgPT4gKHsKICAgIHBob3RvczogWwogICAgICB7IHRpdGxlOiAn7J2466y8Jywgcm91dGU6ICcvcGVyc29uJyB9LAogICAgICB7IHRpdGxlOiAn7Jes7ZaJ7KeAJywgcm91dGU6ICcvbmF0dXJlJyB9LAogICAgICB7IHRpdGxlOiAn7J2M7IudJywgcm91dGU6ICcvZm9vZCcgfQogICAgXSwKICAgIHNlcnZpY2VzOiBbCiAgICAgIHsgdGl0bGU6ICfslrjroaDrs7Trj4QnLCByb3V0ZTogJy9kYXVtTmV3c0NyYXdsZXInfSwKICAgICAgeyB0aXRsZTogJ+yniOusuOqyjOyLnO2MkCcsIHJvdXRlOiAnL3F1ZXN0aW9uJyB9LAogICAgICB7IHRpdGxlOiAn7Jik7Iuc64qUIOq4uCcsIHJvdXRlOiAnL21hcCcgfSwKICAgIF0sCiAgICBhYm91dHM6IFsKICAgICAgeyB0aXRsZTogJ0xvTSDshozqsJwnLCByb3V0ZTogJy9pbnRybycgfSwKICAgICAgeyB0aXRsZTogJ+qzteyngOyCrO2VrScsIHJvdXRlOiAnL25vdGljZScgfSwKICAgIF0sCiAgICBsb2dpbkRpYWxvZzogZmFsc2UsCiAgICB1c2VySW5mbzogewogICAgICAgIHVzZXJJZDogJycsCiAgICAgICAgcGFzc3dvcmRDaGVjazogJycsCiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgICBoaWRlRGlhbG9nICgpIHsKICAgICAgICAgIHRoaXMubG9naW5EaWFsb2cgPSBmYWxzZQogICAgICB9LAogICAgICBidG5Mb2dpbkNsaWNrIChwYXlsb2FkKSB7CiAgICAgICAgICAgIGNvbnN0IHsgdXNlcklkLCBwYXNzd29yZENoZWNrIH0gPSBwYXlsb2FkCiAgICAgICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6Nzc3Ny9yZWdpc3RtZW1iZXIvbG9naW4nLCB7IHVzZXJJZCwgcGFzc3dvcmRDaGVja30pCiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhICE9ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn66Gc6re47J24IOyEseqztSEgLSAnICsgcmVzLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlzTG9naW4gPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+uhnOq3uOyduCDsi6TtjKghIC0gJyArIHJlcy5kYXRhKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIC8qCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdCb2FyZFJlYWRQYWdlJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogeyBib2FyZE5vOiByZXMuZGF0YS5ib2FyZE5vLnRvU3RyaW5nKCkgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KHJlcy5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["AppBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppBar.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\n    <div>\n        <v-app-bar app=\"app\" color=\"green\" dark=\"dark\">\n            <div class=\"d-flex align-center\">\n                <router-link :to=\"{ name: 'Home' }\"\n                    class=\"nav-link\"\n                    active-class=\"active\">\n                <v-img\n                    alt=\"Life Of Moment Logo\"\n                    class=\"shrink mr-2\"\n                    contain=\"contain\"\n                    src=\"@/assets/img/logos.png\"\n                    transition=\"scale-transition\"\n                    width=\"130\"/>\n                </router-link>\n            </div>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <v-spacer></v-spacer>\n            <div>\n                <v-menu open-on-hover=\"open-on-hover\" bottom=\"bottom\" offset-y=\"offset-y\">\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn v-bind=\"attrs\" v-on=\"on\" text=\"text\">\n                            <span class=\"mr-4\">Photo</span>\n                        </v-btn>\n                    </template>\n                    <v-list>\n                        <v-list-item v-for=\"(photo, index) in photos\" :key=\"index\" :to=\"photo.route\">\n                            <v-list-item-title>{{ photo.title }}</v-list-item-title>\n                        </v-list-item>\n                    </v-list>\n                </v-menu>\n            </div>\n            <div>\n                <v-menu open-on-hover=\"open-on-hover\" bottom=\"bottom\" offset-y=\"offset-y\">\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn v-bind=\"attrs\" v-on=\"on\" text=\"text\">\n                            <span class=\"mr-4\">Service</span>\n                        </v-btn>\n                    </template>\n                    <v-list>\n                        <v-list-item v-for=\"(service, index) in services\" :key=\"index\" :to=\"service.route\">\n                            <v-list-item-title>{{ service.title }}</v-list-item-title>\n                        </v-list-item>\n                    </v-list>\n                </v-menu>\n            </div>\n            <div>\n                <v-menu open-on-hover=\"open-on-hover\" bottom=\"bottom\" offset-y=\"offset-y\">\n                    <template v-slot:activator=\"{ on, attrs }\">\n                        <v-btn v-bind=\"attrs\" v-on=\"on\" text=\"text\">\n                            <span class=\"mr-4\">About</span>\n                        </v-btn>\n                    </template>\n                    <v-list>\n                        <v-list-item v-for=\"(about, index) in abouts\" :key=\"index\" :to=\"about.route\">\n                            <v-list-item-title>{{ about.title }}</v-list-item-title>\n                        </v-list-item>\n                    </v-list>\n                </v-menu>\n            </div>\n            <div>\n                <v-dialog v-model=\"loginDialog\" persistent max-width=\"500px\">\n                <template v-slot:activator=\"{ on }\">\n                <v-btn v-on=\"on\" text=\"text\">\n                    <span class=\"ml-10\">Login</span>\n                </v-btn>\n                 </template>\n                 <v-card>\n                <v-card-title>\n                    <span class=\"headline\">\n                        Log in\n                    </span>\n                </v-card-title>\n                <v-card-text>\n                    <v-container grid-list-md>\n                        <v-layout wrap>\n                            <v-flex xs12>\n                                <v-text-field label=\"UserId\" v-model=\"userId\" prepend-icon=\"mdi-account\" \n                                required flat >\n                                </v-text-field>\n                            </v-flex>\n                            <v-flex xs12>\n                                <v-text-field label=\"Password\" v-model=\"passwordCheck\"\n                                                type=\"password\" required prepend-icon=\"mdi-lock\" flat>\n                                </v-text-field>\n                            </v-flex>\n                        </v-layout>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"teal darken-1\" text @click=\"hideDialog\">\n                        취소\n                    </v-btn>\n                    <v-btn color=\"teal darken-1\" text @click=\"btnLoginClick\">\n                        확인\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n                <span>|</span>\n                <router-link :to=\"{ name: 'RegisterPage' }\"\n                    class=\"nav-link\"\n                    active-class=\"active\"\n                    style=\"text-decoration: none;\">\n                <v-btn text=\"text\" color=\"white\">\n                    <span class=\"mr-1\">Join</span>\n                </v-btn>\n                </router-link>\n                <v-btn href=\"\" target=\"_blank\" text=\"text\">\n                    <v-icon>mdi-magnify</v-icon>\n                </v-btn>\n            </div>\n        </v-app-bar>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'AppBar',\n\n  data: () => ({\n    photos: [\n      { title: '인물', route: '/person' },\n      { title: '여행지', route: '/nature' },\n      { title: '음식', route: '/food' }\n    ],\n    services: [\n      { title: '언론보도', route: '/daumNewsCrawler'},\n      { title: '질문게시판', route: '/question' },\n      { title: '오시는 길', route: '/map' },\n    ],\n    abouts: [\n      { title: 'LoM 소개', route: '/intro' },\n      { title: '공지사항', route: '/notice' },\n    ],\n    loginDialog: false,\n    userInfo: {\n        userId: '',\n        passwordCheck: '',\n    }\n  }),\n  methods: {\n      hideDialog () {\n          this.loginDialog = false\n      },\n      btnLoginClick (payload) {\n            const { userId, passwordCheck } = payload\n            axios.post('http://localhost:7777/registmember/login', { userId, passwordCheck})\n                    .then(res => {\n                        if (res.data != \"\") {\n                            alert('로그인 성공! - ' + res.data)\n                            this.isLogin = true;\n                        } else {\n                            alert('로그인 실패! - ' + res.data)\n                        }\n                        /*\n                        this.$router.push({\n                            name: 'BoardReadPage',\n                            params: { boardNo: res.data.boardNo.toString() }\n                        })\n                        */\n                    })\n                    .catch(res => {\n                        alert(res.response.data.message)\n                    })\n        }\n    }\n};\n</script>\n\n<style>\n\n</style>"]}]}