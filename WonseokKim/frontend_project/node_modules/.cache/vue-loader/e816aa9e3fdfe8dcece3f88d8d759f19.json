{"remainingRequest":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/src/views/QuestionListPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/src/views/QuestionListPage.vue","mtime":1631638468648},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wonseokkim/java_work/LectureContents/javascript/WonseokKim/frontend_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IFF1ZXN0aW9uTGlzdCBmcm9tICdAL2NvbXBvbmVudHMvcXVlc3Rpb24vUXVlc3Rpb25MaXN0LnZ1ZScKaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgY29va2llcyBmcm9tICd2dWUtY29va2llcycKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwoKVnVlLnVzZShjb29raWVzKQpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnUXVlc3Rpb25MaXN0UGFnZScsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgUXVlc3Rpb25MaXN0CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBTdGF0ZShbJ3F1ZXN0aW9ucyddKSwKICAgICAgICAuLi5tYXBTdGF0ZShbJ3Nlc3Npb24nXSkKICAgIH0sCiAgICBtb3VudGVkICgpIHsKICAgICAgICB0aGlzLmZldGNoUXVlc3Rpb25MaXN0KCkKICAgICAgICAvLyB0aGlzLmZldGNoU2Vzc2lvbigpCiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuc2Vzc2lvbiA9IHRoaXMuJGNvb2tpZXMuZ2V0KCJ1c2VyIikKICAgICAgICBpZiAodGhpcy4kc3RvcmUuc3RhdGUuc2Vzc2lvbiAhPSBudWxsKSB7CiAgICAgICAgICAgIHRoaXMuaXNMb2dpbiA9IHRydWUKICAgICAgICAgICAgdGhpcy5pc0xvZ291dCA9IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAuLi5tYXBBY3Rpb25zKFsnZmV0Y2hRdWVzdGlvbkxpc3QnXSksCiAgICAgICAgLi4ubWFwQWN0aW9ucyhbJ2ZldGNoU2Vzc2lvbiddKSwKICAgICAgICBzaG93U2Vzc2lvbiAoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmlzTG9naW4gPT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4ODg4L2pwYXNlc3Npb24vbmVlZFNlc3Npb24nKQogICAgICAgICAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhID09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn7IS47IWYIOygleuztCDsnKDsp4AhIC0gJyArIHJlcy5kYXRhKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgn7IS47IWYIOygleuztCDsnKDsp4Ag7JWI65CY64qUIOykkSEgLSAnICsgcmVzLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdCb2FyZFJlYWRQYWdlJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsgYm9hcmRObzogcmVzLmRhdGEuYm9hcmROby50b1N0cmluZygpIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLwogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2gocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KHJlcy5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBhbGVydCgn66i87KCAIOuhnOq3uOyduOu2gO2EsCDtlZjshLjsmpQhJykKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgIG5hbWU6ICdRdWVzdGlvbkxpc3RQYWdlJywKICAgICAgICAgICAgICAgIC8vcGFyYW1zOiB7IGJvYXJkTm86IHJlcy5kYXRhLmJvYXJkTm8udG9TdHJpbmcoKSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["QuestionListPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionListPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n        <div id=\"question\" align=\"center\">\n            <v-container>\n                <h1>질문사항</h1>\n                <div align=\"right\" @click=\"showSession\">\n                <router-link :to=\"{ name: 'QuestionRegisterPage' }\">\n                    질문사항 작성\n                </router-link>\n                </div>\n                <question-list :questions=\"questions\"></question-list>\n            </v-container>\n        </div>\n</template>\n\n<script>\n\nimport Vue from 'vue'\nimport QuestionList from '@/components/question/QuestionList.vue'\nimport { mapState, mapActions } from 'vuex'\nimport cookies from 'vue-cookies'\nimport axios from 'axios'\n\nVue.use(cookies)\nexport default {\n    name: 'QuestionListPage',\n    components: {\n        QuestionList\n    },\n    computed: {\n        ...mapState(['questions']),\n        ...mapState(['session'])\n    },\n    mounted () {\n        this.fetchQuestionList()\n        // this.fetchSession()\n        this.$store.state.session = this.$cookies.get(\"user\")\n        if (this.$store.state.session != null) {\n            this.isLogin = true\n            this.isLogout = false\n        }\n    },\n    methods: {\n        ...mapActions(['fetchQuestionList']),\n        ...mapActions(['fetchSession']),\n        showSession () {\n            if (this.isLogin == true) {\n                axios.post('http://localhost:8888/jpasession/needSession')\n                        .then(res => {\n                            if (res.data == true) {\n                                alert('세션 정보 유지! - ' + res.data)\n                            } else {\n                                alert('세션 정보 유지 안되는 중! - ' + res.data)\n                            }\n                            /*\n                            this.$router.push({\n                                name: 'BoardReadPage',\n                                params: { boardNo: res.data.boardNo.toString() }\n                            })\n                            */\n                        })\n                        .catch(res => {\n                            alert(res.response.data.message)\n                        })\n            } else {\n                alert('먼저 로그인부터 하세요!')\n                this.$router.push({\n                name: 'QuestionListPage',\n                //params: { boardNo: res.data.boardNo.toString() }\n                })\n            }\n        }\n    }\n}\n</script>"]}]}